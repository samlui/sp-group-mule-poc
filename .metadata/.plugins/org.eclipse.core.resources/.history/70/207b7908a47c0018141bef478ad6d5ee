<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
    <flow name="peerFlow">
        <parse-template location="src/main/resources/temp/meter-out-final.json" doc:name="Parse Template"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="1b40dd59-85c4-41f6-b69e-636fffb12c2d">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <set-payload value="#[payload.values()]" doc:name="Set Payload"/>
        <request-reply doc:name="Request-Reply">
            <vm:outbound-endpoint exchange-pattern="one-way" path="peer.in.1" doc:name="VM"/>
            <vm:inbound-endpoint exchange-pattern="one-way" path="peer.out" doc:name="VM"/>
        </request-reply>
        <logger message="peer meter final output : #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="peerFlow1">
        <vm:inbound-endpoint exchange-pattern="one-way" path="peer.in.1" doc:name="VM"/>
        <set-variable variableName="MULE_REPLYTO_STOP" value="true" doc:name="Copy_of_Copy_of_MULE_REPLYTO_STOP"/>
        <collection-splitter doc:name="Collection Splitter"/>
        <logger message="5. each peer input : #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="peerAcct" value="#[payload]" doc:name="meterAcct"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="peer.in.2" doc:name="VM"/>
    </flow>
    <flow name="peerFlow2">
        <vm:inbound-endpoint exchange-pattern="one-way" path="peer.in.2" doc:name="VM"/>
        <collection-aggregator failOnTimeout="true" doc:name="Collection Aggregator"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="peer.out" doc:name="VM"/>
    </flow>
</mule>
