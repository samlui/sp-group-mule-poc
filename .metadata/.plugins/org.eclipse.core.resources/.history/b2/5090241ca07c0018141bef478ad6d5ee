<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <flow name="meterFlow">
        <parse-template location="src/main/resources/temp/accounts-out-final.json" doc:name="Parse Template"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="4. list of accounts : #[payload.values()]" level="INFO" doc:name="Logger"/>
        <set-payload value="#[payload.values()]" doc:name="Set Payload"/>
        <request-reply doc:name="Request-Reply">
            <vm:outbound-endpoint exchange-pattern="one-way" path="meter.in.1" doc:name="VM"/>
            <vm:inbound-endpoint exchange-pattern="one-way" path="meter.out" doc:name="VM"/>
        </request-reply>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="6. meter aggregated output : #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="meterFlow1">
        <vm:inbound-endpoint exchange-pattern="one-way" path="meter.in.1" doc:name="VM"/>
        <set-variable variableName="MULE_REPLYTO_STOP" value="true" doc:name="Copy_of_MULE_REPLYTO_STOP"/>
        <collection-splitter doc:name="Collection Splitter"/>
        <logger message="5. each meter input : #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="meterAcct" value="#[payload]" doc:name="Variable"/>
        <set-variable variableName="acct" value="#[payload.get(&quot;account&quot;).ACCOUNT_NO]" doc:name="acct"/>
        <enricher source="#[payload]" target="#[payload]" doc:name="Message Enricher">
            <processor-chain doc:name="Processor Chain">
                <choice doc:name="Choice">
                    <when expression="#[payload.get(&quot;account&quot;)==&quot;E&quot;]">
                        <logger message="output: #[payload.get(&quot;account&quot;).ACCOUNT_NO]" level="INFO" doc:name="Logger"/>
                        <dw:transform-message doc:name="Transform Message" metadata:id="2715f3d5-01be-44bf-9137-4b3e0f8b942e">
                            <dw:input-payload mimeType="application/json"/>
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	account_number: flowVars.acct
}]]></dw:set-payload>
                        </dw:transform-message>
                        <http:request config-ref="sapi-sap-e-service-configuration" path="/meter_install" method="POST" doc:name="Meter E Service"/>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <logger message="output: #[payload.get(&quot;account&quot;).ACCOUNT_NO]" level="INFO" doc:name="Logger"/>
                        <dw:transform-message doc:name="Transform Message" metadata:id="a51fbd79-8e08-4b69-b3ab-e4927e3ae21b">
                            <dw:input-payload mimeType="application/json"/>
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	 account_number: flowVars.acct
}]]></dw:set-payload>
                        </dw:transform-message>
                        <http:request config-ref="sapi-sap-m-service-configuration" path="/meter_install" method="POST" doc:name="Meter M Service"/>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </processor-chain>
        </enricher>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[flowVars.meterAcct.put("meter", payload);
return flowVars.meterAcct;]]></scripting:script>
        </scripting:transformer>
        <vm:outbound-endpoint exchange-pattern="one-way" path="meter.in.2" doc:name="VM"/>
    </flow>
    <flow name="meterFlow2">
        <vm:inbound-endpoint exchange-pattern="one-way" path="meter.in.2" doc:name="VM"/>
        <collection-aggregator failOnTimeout="true" doc:name="Collection Aggregator"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="meter.out" doc:name="VM"/>
    </flow>
</mule>
